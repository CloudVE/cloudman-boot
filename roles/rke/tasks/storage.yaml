- name: Create CSI driver namespace
  command: >
    /usr/local/bin/kubectl create namespace csi-drivers
  ignore_errors: true

- name: Install AWS Disk CSI Driver
  command: >
    /usr/local/bin/helm upgrade --install aws-ebs-csi-driver https://github.com/kubernetes-sigs/aws-ebs-csi-driver/releases/download/helm-chart-aws-ebs-csi-driver-2.10.1/aws-ebs-csi-driver-2.10.1.tgz
        --namespace csi-drivers
  when: not kube_in_tree_provider and kube_cloud_provider == "aws"

- name: Install Azure Disk CSI Driver
  command: >
    /usr/local/bin/helm upgrade --install azuredisk-csi-driver https://github.com/kubernetes-sigs/azuredisk-csi-driver/raw/master/charts/v1.22.0/azuredisk-csi-driver-v1.22.0.tgz
        --namespace csi-drivers
  when: not kube_in_tree_provider and kube_cloud_provider == "azure"

- name: Uninstall google-cloud-sdk (https://cloud.google.com/sdk/docs/downloads-snap)
  snap:
    name: "google-cloud-sdk"
    classic: yes
    state: absent
  become: yes

- name: Install golang and gcloud cli (needed for gcp csi driver)
  snap:
    name: "{{ item }}"
    classic: yes
  become: yes
  with_items:
    - go
    - google-cloud-cli

- name: Clone GCP CSI Driver
  shell: git clone https://github.com/kubernetes-sigs/gcp-compute-persistent-disk-csi-driver $HOME/go/src/sigs.k8s.io/gcp-compute-persistent-disk-csi-driver
  ignore_errors: true
  when: not kube_in_tree_provider and kube_cloud_provider == "gce"

- name: Install GCP CSI Driver
  shell: cd $HOME/go/src/sigs.k8s.io/gcp-compute-persistent-disk-csi-driver && GOPATH=$HOME/go GCE_PD_DRIVER_NAMESPACE=csi-drivers GCE_PD_DRIVER_VERSION=noauth ./deploy/kubernetes/deploy-driver.sh --skip-sa-check
  when: not kube_in_tree_provider and kube_cloud_provider == "gce"

- name: Install OpenStack CSI Driver
  command: >
    /usr/local/bin/helm repo add cpo https://kubernetes.github.io/cloud-provider-openstack
  when: kube_in_tree_provider and kube_cloud_provider == "openstack"

- name: Install OpenStack CSI Driver
  command: >
    /usr/local/bin/helm upgrade --install cinder-csi cpo/openstack-cinder-csi
        --namespace csi-drivers
  when: kube_in_tree_provider and kube_cloud_provider == "openstack"

- name: Render hostpath storage class template
  template:
    src: hostpath_storage_class.yaml.j2
    dest: /tmp/hostpath_storage_class.yaml

- name: Fallback to hostpath provisioner when no cloud provider is set
  shell: /usr/local/bin/kubectl apply -f /tmp/hostpath_storage_class.yaml
  when: not kube_cloud_provider

- name: Render ebs storage class template
  template:
    src: ebs_storage_class.j2
    dest: /tmp/ebs_storage_class.yml

- name: Deploy ebs storage class
  shell: /usr/local/bin/kubectl apply -f /tmp/ebs_storage_class.yml
